#+OPTIONS: ^:{} toc:nil num:nil author:t creator:f email:t LaTex:t timestap:t
#+TITLE: 野球審判用インジケータ開発
#+AUTHOR: Takuro Onoue
#+EMAIL: onoue@showway.biz
#+STYLE: <link rel="stylesheet" type="text/css" href=".org/org-style.css" />
#+LANGUAGE: ja
#+ODT_STYLES_FILE: ".org/template.odt"

* Why?
 - 子供が少年野球をやっています
 - 通常は父兄が審判をやる
 - 審判はけっこう難しい、野球経験がないとけっこうムズい
 - 「あれ、今のカウントなんだっけ？」
 - せめてカウントくらいは把握しときたい
* 作成目標
 - 既存のインジケータを再開発
 - ボール・ストライク・アウトを表示するだけ
 - 作るの簡単
 - 二匹目のどじょう
** アナログタイプのインジケータ
#+LABEL: fig:アナログタイプ
#+ATTR_HTML: width="300"
file:img/indicator1.jpg
** デジタルタイプのインジケータ
#+LABEL: fig:デジタルタイプ
#+ATTR_HTML: align="left" width="300"
file:img/indicator2.jpg
** 買えばいいじゃん
 - けっこうちゃちい
 - カウントを元に戻すのがめんどう
 - よく失くなる
* ソフトウェア要求仕様
 - ボール・ストライク・アウトをカウント・表示
 - 状況に応じて表示をクリア
 - アンドゥ機能
 - プレイ時間を表示
* スマホで開発できないか...
 - 炎天下では見えづらい
 - タッチタイプできない
 - 電池が持たない
* 物理ボタンの有用性
 - タッチタイプできる
 - 押した感触が重要
* ハードウェア要求仕様
 - 物理ボタンがあること
 - 夏の炎天下でも視認性の良いこと
 - 電池が持つこと
 - 常時表示
 - 防水
「それ、Pebbleでできるよ」
** Pebble
#+LABEL: fig:いしころ
file:img/pebble.jpg
** Pebble
#+LABEL: fig:Pebble
file:img/pebble2.png
* Pebbleとは？
 - スマートウォッチの一つ
   - Apple Watch
   - Android Wear
 - スマートウォッチ世界出荷台数予測
   - 2014年は360万本
   - 2020年には1億本!([[http://itpro.nikkeibp.co.jp/atcl/news/14/110601779/051100168/][米国の市場調査会社IHSによる調査]])
   - 2020年の市場規模は230億ドル!
 - Pebbleは100万本
  - [[http://japan.cnet.com/news/service/35059842/][Pebble、スマートウォッチ販売数が100万本を突破]]
* Pebbleの特徴
 - 電池がわりと長持ち(普通に使って一週間)
 - タッチパネルなし(物理ボタンのみ)
 - 画面常時表示のモノクロ液晶(シャープのメモリ液晶)
 - 野外でも視認性がよい。チラ見OK
* なにができるの？
 - テキスト、グラフィック表示
 - スマホからの通知の表示
 - スマホとの通信(スマホアプリとの連携)
 - センサー(加速度・磁気計・環境光)
* [[http://developer.getpebble.com/][Pebble開発]]
 - Pebble SDK を使って開発
 - Pebble本体のアプリ開発はC言語かJavaScript
 - JavaScriptの場合はanimationなどの機能が制限
 - スマホとの連携時はそれぞれライブラリを使う
   - PebbleKit iOS
   - PebbleKit Android
** [[http://developer.getpebble.com/docs/][Pebble SDK]]
 - [[http://developer.getpebble.com/docs/c/][Pebble C]]
   The Pebble C SDK, used for creating native watchapps and watchfaces.
 - [[http://developer.getpebble.com/docs/ios/][PebbleKit iOS]]
   Objective-C library for creating companion apps that interface iOS and Pebble.
 - [[http://developer.getpebble.com/docs/android/][PebbleKit Android]]
   Java library for creating companion apps that interface Android and Pebble.
 - [[http://developer.getpebble.com/docs/js/][PebbleKit JS]]
   JavaScript component of a Pebble app that leverages features of the connected phone to enhance watchapp capabilities.
 - [[http://developer.getpebble.com/docs/pebblejs][Pebble.js]]
   Create watchapps using only JavaScript code, which controls a provided native watchapp over Bluetooth.
* ブラウザで完結する開発環境
 - CLOUDPEBBLE
   https://cloudpebble.net/ide/
   - プロジェクト作成
   - コードエディタ
   - コンパイラ
   - デバッガ
   - エミュレータの実行
   - 実機への転送
 - Pebble SDKを使ってPCを使った普通の開発も可能
** android単体で開発できんじゃね？
 - できました
 - 通勤電車でも開発可能
#+LABEL: fig:androidでCLOUDPEBBLE
file:img/fig2.png
* アプリストアへの登録
 - [[https://dev-portal.getpebble.com/developer][Pebble | Developer]]
   - アプリストアへの登録
   - アプリ説明
   - スクリーンショット貼り付け
** 実際にやってみました。
 - [[https://dev-portal.getpebble.com/applications/561cb30d2116352d6600003d][アプリ登録画面]]
   - プレビューを見ながら登録・修正していく
 - [[http://apps.getpebble.com/en_US/application/561cb30d2116352d6600003d][アプリストア画面]]
** githubとの連携
 - CLOUDPEBBLEで開発したソースをgithubへpush
 - CLOUDPEBBLEにgithubのソースからpull
 - [[https://cloudpebble.net/ide/project/254511#][CLOUDPEBBLEのプロジェクトページ]]
 - [[https://github.com/kusanaginoturugi/bso][githubリポジトリ]]
* どこで儲けるか？
 - PEBBLEアプリの課金方法は今のところなし
 - コンパニオンアプリに課金する
   - 有料のコンパニオンアプリ
   - コンパニオンアプリの広告収入
 - 既存スマホアプリの拡張
 - 回収まで考えると、スマホアプリ開発も必須
* まとめ
 - UIの正解はそれぞれ違う
 - 用途に合わせた開発
 - 枯れた技術+最新技術の組み合わせ
 - IoT(モノのインターネット)の流れ
